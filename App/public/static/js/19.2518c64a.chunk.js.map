{"version":3,"sources":["component/menuSlideUp.js"],"names":["Icon2","loadable","__webpack_require__","e","then","bind","CheckBoxSlide","MenuSlideUpProcessTime","MenuSlideUpSchedule","Details","props","_useObserveChanges","useSelector","state","observeChanges","dispatch","useDispatch","_openMdSchedule","_id","item","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","OpenWatchDialog","_openMd","useObserveChanges","closePop","_state","_Util","keys","searchHash","window","location","hash","split","router","id","usersFBList","isAdmin","_item","_useState","useState","_useState2","Object","E_newProject_Monorepo_AmzFlx_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","openNotification","setOpenNotification","_useState3","_useState4","openScheduleBox","setopenScheduleBox","_useState5","_useState6","procTimeView","setopenProcTimeView","notificationTypes","updNotificationTypes","f","sch","UpdateDetails","Fragment","className","data-uia","onClick","name","color","concat","ntf","isAct","map","ntF","push","join","notificationActive","size","icon","field","updChange","initvalue","keyCode","sleepMode","updsleepMode","turtleMode","updturtleMode","speedByHours","updSpeedByHours"],"mappings":"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","file":"static/js/19.2518c64a.chunk.js","sourcesContent":["\n\n\nimport React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport './_styles.css'\n\n\nimport { UpdateDetails,  OpenWatchDialog} from '../actions/common';\n\n\n\nimport * as _Util from '../store/Util'\n\nimport loadable from '@loadable/component'\n\nconst Icon2 = loadable(() => import('./Icons'))\n\nconst CheckBoxSlide = loadable(() => import('./CheckBoxSlide'))\n\nconst MenuSlideUpProcessTime = loadable(() => import('./menuSlideUpProcessTime'))\n\nconst MenuSlideUpSchedule = loadable(() => import('./menuSlideUpSchedule'))\n\n\n\nconst useObserveChanges = () => {\n  const observeChanges =  useSelector(state => state.observeChanges);\n  const dispatch = useDispatch(); \n\n\n  const _openMd = (_id, item) => {\n    let data = {};\n    data['zIndex']=450;\n    data['Id']=_id;\n    data['observeResize']=true;    \n    data['props']={item:item};\n    data['content']=<MenuSlideUpProcessTime />;\n    OpenWatchDialog(dispatch,data);\n  }\n\n\n  const _openMdSchedule = (_id, item) => {\n    let data = {};\n    data['zIndex']=450;\n    data['Id']=_id;\n    data['observeResize']=true;\n    data['content']=<MenuSlideUpSchedule />;\n    OpenWatchDialog(dispatch,data);\n  }\n\n\n\n\n  return {\n    _openMdSchedule,\n    _openMd\n  }\n}\n\n\n\n\n\n\n\n\nconst Details = (props) => {\n  \n\n  const {\n    _openMd,\n    _openMdSchedule\n  } = useObserveChanges();\n\n  const { closePop } = props;\n\n  let _state = _Util.getStore();\n  let keys = _Util.getGlobalsKeys()\n\n  let searchHash = window.location.hash.split('?')[1]?window.location.hash.split('?')[1]:null;\n \n  const router = _Util.parseQuery(searchHash);\n  let _id = router.id?router.id:null;\n  // const typeBrowse = window.location.hash.split('/')[1].split('?')[0];\n\n\n  let usersFBList = _state[\"usersFBList\"];\n  const id  = _id || _state[\"ActiveUser\"];\n\n  const isAdmin  = _state[\"isAdmin\"];\n\n  \n\n\n\n  let _item = usersFBList && usersFBList[id]\n \n \n  const [ openNotification, setOpenNotification ] = useState(false); \n  const [ openScheduleBox, setopenScheduleBox ] = useState(false); \n  const [ procTimeView, setopenProcTimeView ] = useState(false); \n  \n\n\n\n  const openSchedule = (e) => { \n    setopenScheduleBox(!openScheduleBox)\n  }\n\n\n  let notificationTypes = _item && _item[\"notificationTypes\"]\n\n  const updsleepMode = (e) => {    \n    UpdateDetails(id, {sleepMode:e})\n  }  \n  \n  const updturtleMode = (e) => { \n    UpdateDetails(id, {turtleMode:e})\n  }\n\n  const updSpeedByHours = (e) => { \n    UpdateDetails(id, {speedByHours:e})\n  }\n\n  const openNotificationFunc = (e) => { \n    setOpenNotification(!openNotification)\n  }\n  \n  const openProcTime = (e) => { \n    setopenProcTimeView(!procTimeView)\n  }\n  \n  \n\n\n  const updNotificationTypes = (e,f) => { \n    let sch = notificationTypes || {};\n    sch[f] = e;\n    UpdateDetails(id, {notificationTypes:sch});\n  }\n  \n\n\n\n  const notificationActive = () => {\n    let ntf = []\n    let isAct = false;\n    notificationTypes && _Util.ObjectKeys(notificationTypes).map(ntF=>{\n      if(notificationTypes[ntF]){\n        ntf.push(ntF);\n        isAct = true;\n      }\n    })\n    if(isAct){\n      return ntf.join(', ')\n    }else{\n      return 'None'\n    }\n    \n  }\n\n\n  \n\n  let isNot = true\n  return (\n      <>\n        <div className={`optionsMenu boxCard`}>\n          <div className={`slideWrp`}>\n            <div className={`flexColor _dsplFlx `}>\n              <h4>{\"Options\"}</h4>\n              <div className=\"previewModal-close\" data-uia=\"previewModal-closebtn\"  onClick={()=>closePop(1)} >\n                  <Icon2 name={'Xclose'} color={'currentColor'} />\n              </div>\n            </div>\n            <div className={openScheduleBox ?`active SlideboxCard `:\"SlideboxCard\"}>\n              <div className={`_dsplFlx spaceAround  `} onClick={()=>openSchedule()}>\n                <div className={`_dsplFlx flxbsc90 ${openScheduleBox?'_marginTitle':''}`} >\n                  <div className={`_dsplFlx`}>\n                    <p className={`_icon_on_menu `} >\n                      <Icon2 name={'calendar'} color={`#d3d3d3`}/>\n                    </p>\n                    <h4>Schedule</h4>\n                  </div>\n                </div>\n                <div className={`flxbsc10 alignSelf`}>\n                  <p className={`_icon_on_menu `} >\n                    <Icon2 name={openScheduleBox?'Xclose':'timer_outline'} color={`#ff7817`}/>\n                  </p>\n                </div>\n              </div>\n              <div className={openScheduleBox?`scheduleDrop _open`:\"scheduleDrop\"}>\n                {openScheduleBox ?\n                  <MenuSlideUpSchedule />:\n                null}\n              </div>\n            </div>\n            <div className={openNotification ?`active SlideboxCard `:\"SlideboxCard\"}>\n            <div className={`_dsplFlx spaceAround `}  onClick={()=>openNotificationFunc()}>         \n                <div className={`_dsplFlx flxbsc50  ${openNotification?'_marginTitle':''}`}  >\n                  <div className={`_dsplFlx`}>\n                    <p className={`_icon_on_menu `} onClick={()=>{}}>\n                      <Icon2 name={isNot?'notifications_active':'notifications_off'} color={`#d3d3d3`}/>\n                    </p>\n                    <h4>Notification</h4>\n                  </div>\n                </div>\n                <div className=\"flexSpace\"/>\n                <div className={`alignSelf`} >\n                  {openNotification?\n                  <p className={`_icon_on_menu `} >\n                    <Icon2 name={'Xclose'} color={`#ff7817`}/>\n                  </p>\n                  : \n                  <p className={`_notification_label `} >\n                    <span>{notificationActive()}</span>\n                  </p>\n                  }\n                </div>\n              </div>\n              <div className={openNotification?`scheduleDrop _open`:\"scheduleDrop\"}>\n                {openNotification ?\n                  <div className={` notificationBox`} >\n                    <div className={`_dsplFlx spaceAround `}>         \n                        <div className={`_dsplFlx flxbsc80`}>\n                          <div className={`_dsplFlx`}>\n                            <p className={`_icon_on_menu `} onClick={()=>{}}>\n                              <Icon2 name={'email'} color={`#d3d3d3`} size={18}/>\n                            </p>\n                            <h5>Email</h5>\n                          </div>\n                        </div>\n                        <div className={`flxbsc20 alignSelf`}>\n                          <CheckBoxSlide icon={`more_vert`} field={\"email\"} updChange={(e)=>updNotificationTypes(e,'email')} initvalue={notificationTypes && notificationTypes['email']} keyCode={keys[85]}/>\n                        </div>\n                    </div>\n                    <div className={`_dsplFlx spaceAround `}>         \n                      <div className={`_dsplFlx flxbsc80`}>\n                        <div className={`_dsplFlx`}>\n                          <p className={`_icon_on_menu `} onClick={()=>{}}>\n                            <Icon2 name={'sms'} color={`#d3d3d3`} size={18}/>\n                          </p>\n                          <h5>SMS</h5>\n                        </div>\n                      </div>\n                      <div className={`flxbsc20 alignSelf`}>\n                        <CheckBoxSlide icon={`more_vert`} field={\"sms\"} updChange={(e)=>updNotificationTypes(e,'sms')} initvalue={notificationTypes && notificationTypes['sms']} keyCode={keys[85]}/>\n                      </div>\n                    </div>\n                    <div className={`_dsplFlx spaceAround `}>         \n                      <div className={`_dsplFlx flxbsc80`}>\n                        <div className={`_dsplFlx`}>\n                          <p className={`_icon_on_menu `} onClick={()=>{}}>\n                            <Icon2 name={'notification_webApp'} color={`#d3d3d3`} size={18}/>\n                          </p>\n                          <h5>WebApp</h5>\n                        </div>\n                      </div>\n                      <div className={`flxbsc20 alignSelf`}>\n                        <CheckBoxSlide icon={`more_vert`} field={\"webapp\"} updChange={(e)=>updNotificationTypes(e,'webapp')} initvalue={notificationTypes && notificationTypes['webapp']} keyCode={keys[85]}/>\n                      </div>\n                    </div>\n                  </div>\n                  :null}\n              </div>\n            </div>\n            \n            {isAdmin?\n            <>\n            <div className={procTimeView ?`active SlideboxCard `:\"SlideboxCard\"}>\n              <div className={`_dsplFlx spaceAround `}>\n                <div className={`_dsplFlx flxbsc90  ${procTimeView?'_marginTitle':''}`}  onClick={()=>openProcTime()}>\n                  <div className={`_dsplFlx`}>\n                    <p className={`_icon_on_menu `} >\n                      <Icon2 name={'setting'} color={`#d3d3d3`}/>\n                    </p>\n                    <h4>Process Time</h4>\n                  </div>\n                </div>\n                <div className={`flxbsc10 alignSelf`}>\n                  <p className={`_icon_on_menu `} >\n                    <Icon2 name={'speedometer'} color={`#ff7817`}/>\n                  </p>\n                </div>\n              </div>\n              <div className={procTimeView?`scheduleDrop _open`:\"scheduleDrop\"}>\n                  {procTimeView ? \n                    <MenuSlideUpProcessTime />\n                  :null}\n              </div>\n            </div>\n            <div className={`_dsplFlx spaceAround `}>\n                <div className={`_dsplFlx flxbsc80`}>\n                  <div className={`_dsplFlx`}>\n                    <p className={`_icon_on_menu `} onClick={()=>{}}>\n                      <Icon2 name={'moon'} color={`#d3d3d3`}/>\n                    </p>\n                    <h4>Sleep Mode</h4>\n                  </div>\n                </div>\n                <div className={`flxbsc16 alignSelf`}>\n                  <CheckBoxSlide icon={`more_vert`} field={\"sleepMode\"} updChange={(e)=>updsleepMode(e)} initvalue={_item && _item['sleepMode']} keyCode={keys[75]}/>\n                </div>\n            </div> \n            <div className={`_dsplFlx spaceAround `}>\n                <div className={`_dsplFlx flxbsc80`}>\n                  <div className={`_dsplFlx`}>\n                    <p className={`_icon_on_menu `} onClick={()=>{}}>\n                      <Icon2 name={'tortoise'} color={`#d3d3d3`}/>\n                    </p>\n                    <h4>Turtle Mode</h4>\n                  </div>\n                </div>\n                <div className={`flxbsc16 alignSelf`}>\n                  <CheckBoxSlide icon={`more_vert`} field={\"turtleMode\"} updChange={(e)=>updturtleMode(e)} initvalue={_item && _item['turtleMode']} keyCode={keys[95]}/>\n                </div>\n            </div> \n            <div className={`_dsplFlx spaceAround `}>\n                <div className={`_dsplFlx flxbsc80`}>\n                  <div className={`_dsplFlx`}>\n                    <p className={`_icon_on_menu `} onClick={()=>{}}>\n                      <Icon2 name={'speedometer'} color={`#d3d3d3`}/>\n                    </p>\n                    <h4>Speed By Hours</h4>\n                  </div>\n                </div>\n                <div className={`flxbsc16 alignSelf`}>\n                  <CheckBoxSlide icon={`more_vert`} field={\"speedByHours\"} updChange={(e)=>updSpeedByHours(e)} initvalue={_item && _item['speedByHours']} keyCode={keys[85]}/>\n                </div>\n            </div>\n            <div className={`_dsplFlx spaceAround `}>\n                <div className={`_dsplFlx flxbsc80`}>\n                  <div className={`_dsplFlx`}>\n                    <p className={`_icon_on_menu `} onClick={()=>{}}>\n                      <Icon2 name={'speedometer'} color={`#d3d3d3`}/>\n                    </p>\n                    <h4>Port</h4>\n                  </div>\n                </div>\n                <div className={`flxbsc16 alignSelf`}>\n                  {_item && _item['port']}\n                </div>\n            </div>\n            </>\n            :null}\n        </div> \n      </div>       \n    </>\n  );\n}  \n\n\nexport default Details\n\n"],"sourceRoot":""}